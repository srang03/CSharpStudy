네임스페이스 : 클래스 등의 사용자 저의 형식의 이름 충돌을 방지 및 관련 기능끼리 묶어서 관리하기 용이하도록 만들어진 패키지

[1] 네임스페이스 특징
	서로 관련된 클래스, 구조체, 열거형 등의 데이터 형식과 또 다른 네임스페이스 등을 묶어서 관리한다.
	클래스의 이름이 중복되는 것을 방지한다.
	클래스를 계층형 형태로 묶어서 관리할 수 있다.
	네임스페이스는 페키지란 단어와 비슷한 의미로, 관련 있는 형식의 묶음 (그룹화)

[2] 네임스페이스 만들기
	네임스페이스를 만들기 위해 namespace 키워드를 사용한다.
	
	namespace 네임스페이스 이름 {
		// ...
	}

	네임스페이스는 여러번 계층형으로 구분해서 사용할 수 있다.
	 namespace Allcar
	 {
		namespace MyCar{
			...
		}

		namespace YourCar{
			...
		}
	 }

[3] 네임스페이스 관리
	프로그램 규모가 커짐에 따라 클래스 일므이 동일하여 충돌이 발생할 수 있다.
	Foo라는 개발자가 Car 클래스를 설계하고, Bar라는 개발자도 Car 클래스를 설계했다면
	이를 하나의 프로젝트로 합쳤을 때 클래스 이름이 동일하여 충돌이 발생한다.
	이때 도메인 이름으로 네임스페이스를 만들어 클래스를 감싸주면 이름 충돌을 방지할 수 있다.

	네임스페이스.클래스; 의 형태로 사용할 수 있다.

[4] Using 지시문
	namespace 키워드로 만든 네임스페이스를 특정 C# 파일에서 사용하려면 코드 상단에 using 지시문으로 해당 네임스페이스 사용여부를 선언해야한다.

	using 네임스페이스명; 의 형태로 선언하면 해당 네임스페이스 안의 맴버들을 사용할 수 있다.

	using 별칭 = 네임스페이스명; 의 형태로 새로운 별칭을 만들어 코드 내에서 줄여서 사용할 수 있다.

네임스페이스는 프로그램을 브랜드 하나로 묶어서 관리할 수 있다.
C#에서 최소한의 단위는 클래스이지만, 클래스들을 네임스페이스로 묶어 관리할 때 
네임스페이스의 이름은 일반적으로 회사 이름, 소프트웨어 이름, 브랜드 이름, 도메인 이름 등을 설정한다.
실제 소프트웨어 개발시 반드시 의미 있는 이름을 포함해서 사용해야한다.
