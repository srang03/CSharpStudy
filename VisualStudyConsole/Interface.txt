[1] 인터페이스 (Interface) == 표준, 규약, 규칙, 약속, 강제성
	인터페이스는 클래스에서 반드시 구현해야 하는 관련 기능에 대한 정의가 포함된 개념이다.
	특정 맴버가 반드시 구현되어야 함을 보증하는 역할을 수행한다.

	인터페이스는 추상 클래스 개념, 부모 개념, 설계 개념, 표준 개념을 포함하고 있다.

	최상위 설계 목적으로 인터페이스를 먼저 설계하고 나중에 다른 부분들을 
	모델 클래스 설계 > 인터페이스 설계 > 메서드 구현

	인터페이스는 구현하기 전 설계를 위한 개념이다.
	인터페이스는 설계 최고 상위 개념이다.
[2]
	인터페이스는 추상 클래스와 비슷한 형태이며, 클래스의 맴버에 대한 강제성을 부여한다.
	인터페이스를 상속 받은 클래스는 해당 맴버에 대한 실제 코드를 구현해야한다.
	인터페이스 내의 모든 맴버는 기본적으로 public 이다.


[3] 추상 클래스와 인터페이스 차이점
	추상 맴버로 설계가 가능하고, 자체 구현 메서드를 가질 수 있다.
	클래스는 단일 상속만 가능하다.
	인터페이스를 통한 다중 상속이 가능하다.


	웹 프로그래밍 또는 데이터베이스 프로그래밍에서는 인터페이스를 먼저 설계하고,
	이를 구현하는 클래스를 하나 이상 만들기도 한다.


[4] 명시적인 인터페이스 구현
	인터페이스를 사용한 다중 상속이 가능하기 때문에 각 인터페이스에 동일한 맴버가 구현되어 있을 수 있다.
	이때 명시적으로 어떤 인터페이스의 맴버를 실행할지 지정해야한다.
