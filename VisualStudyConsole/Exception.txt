
예외 == 오류

예외와 예외 처리
프로그래밍 예외는 프로그램이 실행되는 동안 발생하는 오류(에러)를 의미한다.
잘못 작성된 코드 등으로 발생되는 예외는 프로그램을 강제적으로 종료하거나 잘못된 결과를 나타내는 식으로 발생한다.
이러한 예외에 대한 대비로 예외 처리를 해주어야한다.

오류의 종류
1) 문법 오류 (Sytax Error) or 컴파일 오류
잘못된 명령어 입력, 타이핑 실수로 발생되는 오류로 컴파일시 컴파일러가 알려준다. 기초 문법 오류
2) 런타임 오류 (Runtime Error)
코드상의 문제가 없어서 컴파일은 되지만 프로그램 작성 후 실행시 발생하는 오류로 많은 테스트를 통해 확인해야한다.
3) 알고리즘 오류 (Logic Error)
주어진 문제에 대한 잘못된 해석으로 잘못된 결과를 초래하는 에러로 알고리즘 또는 로직 에러라고한다. 로직 에러를 해결하는 것이 가장 어렵다. 프로그래밍의 경험이 필요하다.

처리되지 않은 예외는 프로그램의 실행을 중단시키는 원인으로 강제종료 발생한다.
신뢰도와 안정성을 위해 예외처리는 중요하다.
예외 처리를 통한 프로그램 강제 종료를 방지한다.

throw 구문 : 예외를 직접 발생시키는 구문
예외 처리 구문 : Try, Catch, Finally 키워드 사용
Try : 예외가 발생할만한 구문
Catch : 특정 예외가 발생할 경우 그에 대한 처리코드
Finally : 예외 발생여부와 상관없이 항상 실행