[1] 메서드
	C#에서는 모든 함수를 클래스 내에서 선언하기 때문에 함수 대신에 메서드라는 표현을 사용한다.
	메서드는 클래스가 수행할 수 있는 기능들을 이름 하나로 묶어 관리하는 코드 블럭이다.

	클래스의 동작과 기능을 메서드로 표현한다.
	
[2] 메서드 정의
	메서드를 정의할 때 필요한 요소들
	- 엑세스 한정자 (Access Modifier)
	- 반환값 (Return Type) 반환값은 모든 타입이 될 수 있고, 반환값이 없는 경우에는 void를 사용한다.
	- 메서드(함수)명 (함수 이름은 파스칼 표기법 사용)
	- 매개변수(Parameters)

	[엑세스 한정자] [return type] [함수명](Parameters)
	{
		.. 코드
		return 반환값
	}

	함수 시그니처는 메서드 명과 매개변수 리스트인 함수의 구조를 의미한다.
	동일한 이름의 함수 시그니처(메서드 명과 매개변수 리스트)에 따라 어떤 메서드가 호출될지를 결정한다. (오버로드)

[3] 매개변수 (파타미터) 전달 방법
	1) in : 입력 모드로 값에 의한 전달 방식 (Pass By value)
		Call By Value
		파라미터 값이 복사되어 전달되며, 변수의 값은 메서드 안에서만 바뀌고 메서드 밖에 있는 값에는 영향을 미치지 않는다.
		파라미터는 반드시 같거나 호환이 가능해야한다. (같은 데이터 타입, 파라미터 개수)

	2) ref : 입출력 모드로 참조에 의한 전달 방식 (Pass By reference)
		Call By Referece
		* 참조 : 원본 데이터가 어디에 저장되어 있는지 가리키고 있는 화살표를 의미하며 메모리 상의 위치 (포인터) 이다.
		호출자에 의해서 원본 데이터에 영향을 주고 메서드를 호출하기 전에 매개변수를 초기화 해야한다.
		함수를 호출한 쪽에 데이터를 저장하겠다는 의미이다.
		변경되는 실제 데이터는 호출한 쪽에 참조되어 있는 메모리에 저장한다.

	3) out : 특정한 메서드에서 결과값을 출력모드로 전달한다. (Output Parameter)
		Output Parameters
		매개 변수의 값이 메서드 안에서 밖으로 전달된다.
		값이 메서드 안으로 전달되지 않는다.
		메서드 호출자에서 초기화 과정을 하지 않고 메서드 내부에서 참조를 반환해주는 형태


	4) params : 가변형 매개변수로 한 번에 여러 개의 매개변수(배열형) 전달 가능
		매개변수의 개수를 가변적으로 운용하고 싶을 때 사용한다.

[4] 선택적 매개변수
	메서드의 매겨변수를 선언할 때 기본값을 할당할 수 있다.
	매개변수에 값을 할당하는 형식을 사용하면, 호출자가 해당 매개변수에 값을 할당하지 않아도
	오류를 발생하지 않으며 값을 할당한 값이 저장되어 메서드가 호출된다.
		public void GetAddNumber(int x = 0; int y = 0)
		{
			...
		}
		

[5] 명명된 매개변수를 사용하여 메서드 오버로드 구현하기
	선택저 인수와 명명된 인수를 사용하면 메서드 하나로 여러 개를 오버로드한 효과를 가질 수 있다.
		public void PrintMessage(string msg, string prefix = "", string suffix= "") 
		{
			...
		}

메서드는 클래스의 구성 요소 중에서 가장 많이 사용한다.
메서드는 매개변수를 사용하여 그 능력을 향상시킬 수 있다.