[1] NuGet : .NET 패키지 관리자로 DLL파일과 메타 데이터를 모아두는 영역이다.

	https://nuget.org
	- NuGet 갤러리 > 전세계 .NET 개발자들이 public한 파일들을 공유하고 사용할 수 있다.

	- Private 패키지 공유도 가능합니다.
		유료 패키지
		개인 패키지 관리

		사용자 정의로 개발한 라이브러리를 전세계 .NET 개발자에게 공유하고 싶을 때 NuGet 갤러리에 올려 공유 하고 사용할 수 있다.

[2] NuGet Package 생성
	로컬 UI 테스트, 테스트 프로젝트로 충분한 테스트 후 NuGet Package로 생성해야 한다.
	빌드를 하게 되면 dll 파일이 생성되는데, dll 파일 자체가 하나의 라이브러리 즉 패키지가 된다.
	dll 파일을 참조 추가하면 모든 프로젝트에서 dll 파일의 기능을 사용할 수 있다. 

	NuGet Package를 생성하기 위해서는 빌드 후 팩을 실행한다. (프로젝트 마우스 오른쪽 클릭 > 팩)
	또는
	프로젝트 속성 > 패키지 > 빌드 시 NuGet 패키지 생성 체크

	dll 파일만 만드는 것이 아니라 추가적인 메타 데이터를 포함하여 새로운 NuGet 패키지를 생성한다.
	
		ex) bin \ Release \ MyAPI.1.0.0.nupkg 파일 생성됨

	
	1) 업로드 : nuget.org > Upload > Browse > 파일 찾기 > Publish
	2) dll 파일의 유효성 검사 진행 (소요시간 10분 정도) > 이메일로 publish 내용 확인 > Status : Lisㄸted로 변경

[3] NuGet Package 가져오기
	다른 개발자들이 만든 NuGet Package를 참조 추가해서 원하는 프로젝트에서 사용할 수 있다.
	프로젝트 > 종속성 (참조) 오른쪽 클릭 > Nuget Package 관리 > 찾아보기 검색 > 설치
	참조하게 되면 .dll 파일이 생성되고 라이브러리에 있는 기능을 사용할 수 있다.

	자신만의 NuGet 패키지를 만들고 전 세계 닷넷 개발자에게 공개할 수 있다.
	현재 NuGet 공식 사이트에 업로된 패키지들은 이처럼 간단한 유틸리티 라이브러리에서 프레임워크까지 굉장히 많은 기능을 담고 있다.
	
	닷넷에는 기본으로 제공하지 않는 API가 있다.
	API를 자주 사용한다면 닷넷 스탠다드 기반의 클래스 라이브러리로 만들 수 있다.
	
	테스트 프로젝트를 사용하여 여러 방법으로 테스트 수행 > 오류 없는 API로 만든 후 NuGet 갤러리에 패키지로 배포할 수 있다.

