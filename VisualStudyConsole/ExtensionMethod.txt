[1] 확장 메서드 (Extension Method) // static 클래스, static 메서드, 메서드 체이닝, LINQ
	기존 형식에 메서드를 추가하는 기능으로 확장 형식의 인스턴스 메서드로 사용이 가능하다
	클래스는 이미 만들어져있는데, 그곳에 내가 원하는 이름으로 확장 메서드를 추가한다.

	확장 메서드를 사용할 때는 this 키워드르 사용한다.
	(this 확장할 타입)

	기존에 있던 클래스에 내가 원하는 이름으로 원하는 기능을 추가해주는 기능을 확장 메서드라고 한다.
	원본 형식을 변경하지 않고 이미 있는 형식에 추가로 기능을 붙이는 것이다.
	클래스, 구조체, 인터페이스에서 사용할 수 있다.
	
	확장 메서드는 static 키워드가 붙은 클래스에 static 메서드로 만들어진다.
	이때 반드시 동일한 네임스페이스를 참조해야한다.
	
[2] 확장 메서드 사용법
	확장 메서드의 첫 번째 매개변수에 this 키워드를 지정하여 확장 메서드를 사용할 객체 형식을 선택할 수 있다.
	확장 메서드를 사용하면 같은 네임스페이스의 모든 크래스에서 해당 확장 메서드를 호출할 수 있다.
	확장 메서드는 이미 완성된 기존 형식에 새로운 메서드를 추가하는 방법이다.

	public static void MethodName(this object obj, 매개변수){}
	public static void MethodName(this string obj, 매개변수){}

	- 같은 네임스페이스 안에서만 호출이 가능하다.
	- static 클래스의 static 메서드로 구현한다.
	- 첫 번째 매개변수에 this 키워드를 붙여 사용한다.
	- 확장 메서드도 오버로딩이 가능하다.

[2] 메서드 체이닝
	확장 메서드를 연쇄적으로 이용하여 여러 기능들을 코드 한줄에 수행할 수 있다.
	
	
	

[3] 매개변수	
첫 번째 매개 변수는 기본 값, 두 번쨰 매개변수는 확장 메서드 호출시 첫 번째 매개변수로 값을 전달해서 사용할 수 있다.
	public static string AddElipsis (this string msg)
	{
		return $"{msg}..."
	}

	public static string AddElipsis (this string msg, string elipsis)
	{
		return $"{msg} {elipsis}"
	}


	string message = "안녕하세요 반가워요";
	message.AddElipsis();
	message.AddElipsis(" 잘가요");

	사용자 정의로 만들어 놓은 클래스에 추가적으로 확장 메서드를 만들게 되면,
	자주 사용하는 유틸리티들을 인스턴스.확장 메서드().확장 메서드() 형태로 사용할 수 있다.

	
	특정한 클래스에 없는 메서드를 추가하는 개념으로
	첫 번째 매개변수로 this 키워드를 사용해 확장할 타입을 지정한다.
	확장 메서드는 System.Linq 안에 있는 다양한 기능들을 이미 사용해왔다.
	자주 사용하는 기능들이 있다면 개발자가 static 클래스와 메서드로 모아서 관리할 수 있다.
