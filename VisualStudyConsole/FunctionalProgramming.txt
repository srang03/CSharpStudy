C#은 절차지향, 객체지향, 함수형 프로그래밍 스타일을 지원한다.

[1] 함수형 프로그래밍
	- 함수 형태로 연산을 진행하고 변경되는 변수 사용을 멀리하는 스타일
	- 상태값을 가지지 않는 함수들을 연속적으로 호출하여 사용하는 개발 스타일

	문 (Statement) > 순수 함수
	식 (Expression) > 비순수 함수
	
[2] 함수형 프로그래밍의 특징
	변하지 않는 형태 그대로 사용, 식을 사용해서 함수 구현, 제너릭 사용, 확장 메서드 사용, 함수의 파라미터 전달 (고차 함수), LINQ 사용

	LINQ를 사용하여 함수형 프로그램 스타일 개발 가능
		WHERE(), Contains(), OrderBy(), OrderByDescending(), ThenBy(), ThenByDescending(), Skip(), Take(), ToList()
		Select(), SelectMany()

함수형 프로그래밍은 상태 값을 가지지 않는 함수들을 연속으로 호출해서 사용하는 개발 스타일이다.
메서드 체이닝을 사용하는 LINQ 확장 메서드들이 함수형 프로그래밍의 전형적인 예시이다.

[3] 문과 식
문법은 문(Statement)과 식(Expression)으로 표현할 수 있다.
문은 여러 줄로 표현하고, 식은 한줄로 표현할 수 있다.
함수형 프로그래밍에서는 문대신 식으로 사용하는 것이 좋다.
문은 파생 작업(부작용 (Side Effect)가 발생할 가능성이 높아서 식을 사용하여 결과값을 바로 가져오는 형태로 프로그래밍 하는 것이 좋다.)

[4] 변경할 수 없는 형식 (Immutable)
	프로그램 코드 내에서 변경할 수 있는 값으로 어떤 값을 관리하면 중간에 잘못된 값으로 변경될 수 있는 파생 작업(부작용)이 발생할 수 있다.

[5] 고차 함수
함수 자체를 매개 변수 또는 반환값으로 가지는 함수를 고차함수(high-order function)이라고 한다.
고차 함수는 함수 자체를 데이터로 본다.
