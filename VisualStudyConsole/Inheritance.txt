클래스와 클래스는 부모와 자식 관계를 설정할 수 있다. 
이러한 내용을 객체 관계 프로그래밍이라고 한다.
[1] 상속 (Inheritance)
	상속은 부모 클래스와 자식 클래스로 관계를 맺는 것으로
	부모 클래스에 정의된 기능을 재사용하거나 확장 및 수정하여 자식 클래스로 만드는 것이다.
	부모 클래스 :== 슈퍼 클래스 == 베이스 클래스 == 기본 클래스 ==> Base Class
		: 특정 클레스에게 상속을 부여해줄 클래스로 공통적인 기능을 모아 둠

	자식 클래스 == 서브 클래스 == 파생 클래스 => Derived Class
		: 특정 형식에게 상속ㅇ르 부여 받은 타입

	C#의 모든 클래스는 Object 클래스를 상속받고 있다.

	[초기화 방법 2개]
	선언시 초기화해줄 수 있고, 생성자 호출시 초기화해줄 수 있다.

[2] 클래스 상속 구문
	public class 기본 클래스 이름
	{
		...
	}

	System.Object 클래스 : 모든 클래스의 부모 객체로 가장 높은 레벨의 클래스이다.
	기본 클래스 : 다른 클래스의 부모 클래스가 되는 기본 클래스 (base, super)
	파생 클래스 : 다른 클래스의 자식클래스가 되는 파생 클래스


	public class 파생 클래스 : 기본 클래스 이름

[3] 클래스 봉인
	클래스를 만들었는데, 더 이상 다른 클래스에 상속되지 않도록 할 때 사용하는 클래스를 봉인 클래스라고 한다.
	
	public sealed class Demo{
	}

[4] 추상 클래스
	클래스 선언시 abstarct 키워드를 붙여 클래스를 선언할 수 있다.
	다른 클래스의 부모 또는 기본 클래스 역할을 수행한다.
	public abstract class Demo{
	}

	추상클래스는 일반적인 클래스들의 부모 역할을 수행하는데, 공통 기능들을 모아 놓은 클래스 역할을 한다.
	다른 클래스에 상속을 주고 하위 클래스에서 필수적으로 구현해야하는 강제성도 부여한다.

	추상 클래스가 아닌 기본 클래스를 구현 클래스라고 한다.
	구현 클래스는 추상 클래스와 달리 다른 클래스의 부모 클래스가 될 수 있고, 인스턴스화를 할 수 있다.
	추상 클래스는 다른 클래스의 부모 클래스로만 사용할 수 있고 인스턴스화 될 수 없다.
	추상 클래슨느 하나 이상의 추상 맴버들을 가질 수 있다.

	추상 메서드 구현
	public override void Function(){
	}

	메서드 오버라이딩
	새롭게 다시 장의하기
	public new void Function(){
	}
